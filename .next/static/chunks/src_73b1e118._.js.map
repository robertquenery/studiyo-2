{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rober/studiyo%202/src/components/game/QuestionCard.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Answer {\r\n  id: string;\r\n  text: string;\r\n  isCorrect: boolean;\r\n}\r\n\r\ninterface QuestionCardProps {\r\n  question: string;\r\n  answers: Answer[];\r\n  timeLeft: number;\r\n  onAnswerSelect: (answerId: string) => void;\r\n  isAnswered: boolean;\r\n}\r\n\r\nconst colors = [\"#e74c3c\", \"#3498db\", \"#2ecc71\", \"#f1c40f\"];\r\nconst QUESTION_TIME = 20; // seconds per question\r\nconst MAX_POINTS = 1000; // maximum points per question\r\n\r\nexport default function QuestionCard({\r\n  question,\r\n  answers,\r\n  timeLeft,\r\n  onAnswerSelect,\r\n  isAnswered,\r\n}: QuestionCardProps) {\r\n  // Calculate potential points based on time remaining\r\n  const potentialPoints = Math.max(100, Math.floor((timeLeft / QUESTION_TIME) * MAX_POINTS));\r\n\r\n  return (\r\n    <div className=\"w-full max-w-3xl mx-auto p-6\">\r\n      {/* Timer Bar */}\r\n      <div className=\"w-full h-2 bg-gray-200 rounded-full mb-6\">\r\n        <motion.div\r\n          className=\"h-full bg-blue-500 rounded-full\"\r\n          initial={{ width: \"100%\" }}\r\n          animate={{ width: `${(timeLeft / 20) * 100}%` }}\r\n          transition={{ duration: 0.5 }}\r\n        />\r\n      </div>\r\n\r\n      {/* Question */}\r\n      <div className=\"bg-white rounded-lg shadow-lg p-6 mb-6\">\r\n        <h2 className=\"text-2xl font-bold text-center mb-2\">{question}</h2>\r\n        <div className=\"flex justify-between items-center text-center\">\r\n          <p className=\"text-gray-600\">Time left: {timeLeft}s</p>\r\n          <p className=\"text-green-600 font-semibold\">\r\n            Potential points: {potentialPoints}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Answers Grid */}\r\n      <div className=\"grid grid-cols-2 gap-4\">\r\n        {answers.map((answer, index) => (\r\n          <button\r\n            key={answer.id}\r\n            onClick={() => !isAnswered && onAnswerSelect(answer.id)}\r\n            disabled={isAnswered}\r\n            className={`p-6 rounded-lg text-white font-bold text-lg transition-transform hover:scale-105 ${\r\n              isAnswered ? \"opacity-50\" : \"\"\r\n            }`}\r\n            style={{ backgroundColor: colors[index] }}\r\n          >\r\n            {answer.text}\r\n          </button>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAmBA,MAAM,SAAS;IAAC;IAAW;IAAW;IAAW;CAAU;AAC3D,MAAM,gBAAgB,IAAI,uBAAuB;AACjD,MAAM,aAAa,MAAM,8BAA8B;AAExC,SAAS,aAAa,EACnC,QAAQ,EACR,OAAO,EACP,QAAQ,EACR,cAAc,EACd,UAAU,EACQ;IAClB,qDAAqD;IACrD,MAAM,kBAAkB,KAAK,GAAG,CAAC,KAAK,KAAK,KAAK,CAAC,AAAC,WAAW,gBAAiB;IAE9E,qBACE,6LAAC;QAAI,WAAU;;0BAEb,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oBACT,WAAU;oBACV,SAAS;wBAAE,OAAO;oBAAO;oBACzB,SAAS;wBAAE,OAAO,GAAG,AAAC,WAAW,KAAM,IAAI,CAAC,CAAC;oBAAC;oBAC9C,YAAY;wBAAE,UAAU;oBAAI;;;;;;;;;;;0BAKhC,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAAuC;;;;;;kCACrD,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAE,WAAU;;oCAAgB;oCAAY;oCAAS;;;;;;;0CAClD,6LAAC;gCAAE,WAAU;;oCAA+B;oCACvB;;;;;;;;;;;;;;;;;;;0BAMzB,6LAAC;gBAAI,WAAU;0BACZ,QAAQ,GAAG,CAAC,CAAC,QAAQ,sBACpB,6LAAC;wBAEC,SAAS,IAAM,CAAC,cAAc,eAAe,OAAO,EAAE;wBACtD,UAAU;wBACV,WAAW,CAAC,iFAAiF,EAC3F,aAAa,eAAe,IAC5B;wBACF,OAAO;4BAAE,iBAAiB,MAAM,CAAC,MAAM;wBAAC;kCAEvC,OAAO,IAAI;uBARP,OAAO,EAAE;;;;;;;;;;;;;;;;AAc1B;KAnDwB","debugId":null}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rober/studiyo%202/src/components/game/QuizGame.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { db } from \"@/lib/firebase\";\r\nimport { doc, updateDoc, onSnapshot, collection, addDoc } from \"firebase/firestore\";\r\nimport QuestionCard from \"./QuestionCard\";\r\n\r\ninterface Question {\r\n  id: string;\r\n  text: string;\r\n  answers: {\r\n    id: string;\r\n    text: string;\r\n    isCorrect: boolean;\r\n  }[];\r\n}\r\n\r\ninterface GameState {\r\n  id: string;\r\n  currentQuestionIndex: number;\r\n  players: {\r\n    id: string;\r\n    name: string;\r\n    score: number;\r\n    answered: boolean;\r\n  }[];\r\n  status: \"waiting\" | \"active\" | \"finished\";\r\n  questions: Question[];\r\n}\r\n\r\nconst QUESTION_TIME = 20; // seconds per question\r\nconst MAX_POINTS = 1000; // maximum points per question\r\n\r\ninterface QuizGameProps {\r\n  gameId: string;\r\n  playerId: string;\r\n  playerName: string;\r\n  onGameEnd: () => void;\r\n  onScoreUpdate?: (player: { id: string; name: string; score: number }) => void;\r\n}\r\n\r\nexport default function QuizGame({ gameId, playerId, playerName, onGameEnd, onScoreUpdate }: QuizGameProps) {\r\n  const [gameState, setGameState] = useState<GameState | null>(null);\r\n  const [questions, setQuestions] = useState<Question[]>([]);\r\n  const [timeLeft, setTimeLeft] = useState(QUESTION_TIME);\r\n  const [currentQuestion, setCurrentQuestion] = useState<Question | null>(null);\r\n\r\n  // Subscribe to game state changes\r\n  useEffect(() => {\r\n    const unsubscribe = onSnapshot(doc(db, \"games\", gameId), (doc) => {\r\n      if (doc.exists()) {\r\n        const data = doc.data();\r\n        setGameState(data as GameState);\r\n        if (data.questions) {\r\n          setQuestions(data.questions);\r\n          if (data.currentQuestionIndex < data.questions.length) {\r\n            setCurrentQuestion(data.questions[data.currentQuestionIndex]);\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe();\r\n  }, [gameId]);\r\n\r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gameState?.status !== \"active\") return;\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          // Time's up - submit no answer\r\n          handleAnswer(\"\");\r\n          return QUESTION_TIME;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [gameState?.status]);\r\n\r\n  // Reset timer when question changes\r\n  useEffect(() => {\r\n    if (gameState?.status === \"active\") {\r\n      setTimeLeft(QUESTION_TIME);\r\n    }\r\n  }, [gameState?.currentQuestionIndex]);\r\n\r\n  const handleAnswer = async (answerId: string) => {\r\n    if (!gameState || !currentQuestion) return;\r\n\r\n    const isCorrect = currentQuestion.answers.find(a => a.id === answerId)?.isCorrect || false;\r\n    \r\n    // Calculate points based on speed (time remaining)\r\n    let pointsEarned = 0;\r\n    if (isCorrect) {\r\n      // Points = (time remaining / total time) * max points\r\n      // Minimum 100 points for correct answer, maximum 1000 points\r\n      const timeRatio = timeLeft / QUESTION_TIME;\r\n      pointsEarned = Math.max(100, Math.floor(timeRatio * MAX_POINTS));\r\n    }\r\n    \r\n    // Update player's answered status and score in game state\r\n    const gameRef = doc(db, \"games\", gameId);\r\n    const currentPlayer = gameState.players.find(p => p.id === playerId);\r\n    if (!currentPlayer) return;\r\n\r\n    const updatedPlayers = gameState.players.map(player => \r\n      player.id === playerId\r\n        ? { \r\n            ...player,\r\n            score: player.score + pointsEarned, // Add calculated points\r\n            answered: true \r\n          }\r\n        : player\r\n    );\r\n\r\n    // Update local state first\r\n    const updatedState = {\r\n      ...gameState,\r\n      players: updatedPlayers\r\n    };\r\n    setGameState(updatedState);\r\n\r\n    // Then update Firestore\r\n    await updateDoc(gameRef, {\r\n      players: updatedPlayers\r\n    });\r\n\r\n    // Advance to next question if all players answered\r\n    const allAnswered = updatedPlayers.every(p => p.answered);\r\n    if (allAnswered) {\r\n      const nextIndex = gameState.currentQuestionIndex + 1;\r\n      if (nextIndex < questions.length) {\r\n        await updateDoc(gameRef, {\r\n          currentQuestionIndex: nextIndex,\r\n          players: updatedPlayers.map(p => ({ ...p, answered: false })),\r\n        });\r\n      } else {\r\n        // End game\r\n        const finalScore = updatedState.players.find(p => p.id === playerId)?.score || 0;\r\n        \r\n        await updateDoc(gameRef, { \r\n          status: \"finished\",\r\n          players: updatedState.players\r\n        });\r\n        \r\n        // Update leaderboard with final score\r\n        if (onScoreUpdate) {\r\n          onScoreUpdate({\r\n            id: playerId,\r\n            name: playerName,\r\n            score: finalScore\r\n          });\r\n        }\r\n        onGameEnd();\r\n      }\r\n    }\r\n  };\r\n  \r\n  // Timer effect\r\n  useEffect(() => {\r\n    if (gameState?.status !== \"active\") return;\r\n\r\n    const timer = setInterval(() => {\r\n      setTimeLeft((prev) => {\r\n        if (prev <= 1) {\r\n          // Time's up - submit no answer\r\n          handleAnswer(\"\");\r\n          return QUESTION_TIME;\r\n        }\r\n        return prev - 1;\r\n      });\r\n    }, 1000);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [gameState?.status]);\r\n\r\n  if (!gameState || !currentQuestion) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-[400px]\">\r\n        <div className=\"text-xl\">Loading game...</div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4\">\r\n      <div className=\"bg-white rounded-lg shadow-sm p-6 mb-6\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <h3 className=\"text-xl font-bold\">Question {gameState.currentQuestionIndex + 1}/{questions.length}</h3>\r\n          <div className=\"flex items-center gap-4\">\r\n            <div className=\"bg-gray-50 px-4 py-2 rounded-lg\">\r\n              <div className=\"text-sm text-gray-600\">Current Score</div>\r\n              <div className=\"text-xl font-bold text-blue-600\">\r\n                {gameState.players.find(p => p.id === playerId)?.score || 0}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <QuestionCard\r\n        question={currentQuestion.text}\r\n        answers={currentQuestion.answers}\r\n        timeLeft={timeLeft}\r\n        onAnswerSelect={handleAnswer}\r\n        isAnswered={gameState.players.find(p => p.id === playerId)?.answered || false}\r\n      />\r\n\r\n      <div className=\"bg-white rounded-lg shadow-sm p-6 mt-6\">\r\n        <h4 className=\"text-lg font-semibold mb-4\">Players</h4>\r\n        <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\r\n          {gameState.players.map((player) => (\r\n            <div\r\n              key={player.id}\r\n              className={`p-4 rounded-lg ${\r\n                player.answered \r\n                  ? \"bg-green-50 border border-green-100\" \r\n                  : \"bg-gray-50 border border-gray-100\"\r\n              }`}\r\n            >\r\n              <div className=\"font-medium mb-1\">{player.name}</div>\r\n              <div className=\"text-sm text-gray-600\">Score: {player.score}</div>\r\n              {player.answered && (\r\n                <div className=\"text-xs text-green-600 mt-1\">Answered</div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 481, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rober/studiyo%202/src/components/game/GameResults.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\ninterface Player {\r\n  id: string;\r\n  name: string;\r\n  score: number;\r\n  answered: boolean;\r\n}\r\n\r\ninterface GameResultsProps {\r\n  players: Player[];\r\n  onPlayAgain: () => void;\r\n}\r\n\r\nexport default function GameResults({ players, onPlayAgain }: GameResultsProps) {\r\n  // Sort players by score in descending order\r\n  const sortedPlayers = [...players].sort((a, b) => b.score - a.score);\r\n  const winner = sortedPlayers[0];\r\n\r\n  return (\r\n    <div className=\"max-w-2xl mx-auto p-6\">\r\n      <motion.div\r\n        initial={{ scale: 0.8, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        transition={{ duration: 0.5 }}\r\n        className=\"bg-white rounded-lg shadow-sm p-8\"\r\n      >\r\n        <div className=\"text-center mb-8\">\r\n          <h2 className=\"text-3xl font-bold mb-2\">Game Over!</h2>\r\n          <p className=\"text-gray-600\">Here are the final results</p>\r\n        </div>\r\n        \r\n        {/* Winner Section */}\r\n        <div className=\"mb-8\">\r\n          <div className=\"bg-gradient-to-r from-yellow-50 to-yellow-100 rounded-lg p-6 text-center\">\r\n            <div className=\"text-yellow-600 text-sm font-medium mb-2\">Winner</div>\r\n            <div className=\"text-2xl font-bold text-yellow-800 mb-1\">{winner.name}</div>\r\n            <div className=\"inline-flex items-center gap-2 bg-yellow-200 px-3 py-1 rounded-full\">\r\n              <span className=\"text-yellow-700 font-medium\">{winner.score}</span>\r\n              <span className=\"text-yellow-600 text-sm\">points</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Leaderboard */}\r\n        <div className=\"mb-8\">\r\n          <h3 className=\"text-lg font-semibold mb-4\">Final Standings</h3>\r\n          <div className=\"space-y-3\">\r\n            {sortedPlayers.map((player, index) => (\r\n              <motion.div\r\n                key={player.id}\r\n                initial={{ x: -50, opacity: 0 }}\r\n                animate={{ x: 0, opacity: 1 }}\r\n                transition={{ delay: index * 0.1 }}\r\n                className=\"flex items-center justify-between p-4 rounded-lg bg-gray-50 border border-gray-100\"\r\n              >\r\n                <div className=\"flex items-center gap-3\">\r\n                  <span className={`w-6 h-6 flex items-center justify-center rounded-full text-sm font-medium\r\n                    ${index === 0 ? 'bg-yellow-100 text-yellow-700' :\r\n                      index === 1 ? 'bg-gray-100 text-gray-700' :\r\n                      index === 2 ? 'bg-orange-100 text-orange-700' :\r\n                      'bg-blue-50 text-blue-700'}`}>\r\n                    {index + 1}\r\n                  </span>\r\n                  <span className=\"font-medium\">{player.name}</span>\r\n                </div>\r\n                <div className=\"flex items-center gap-2\">\r\n                  <span className=\"font-semibold text-blue-600\">{player.score}</span>\r\n                  <span className=\"text-gray-500 text-sm\">pts</span>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Play Again Button */}\r\n        <div className=\"flex justify-center\">\r\n          <motion.button\r\n            whileHover={{ scale: 1.02 }}\r\n            whileTap={{ scale: 0.98 }}\r\n            onClick={onPlayAgain}\r\n            className=\"bg-blue-600 text-white px-8 py-3 rounded-lg font-semibold hover:bg-blue-700 transition-colors w-full md:w-auto\"\r\n          >\r\n            Play Again\r\n          </motion.button>\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAGA;AAHA;;;AAiBe,SAAS,YAAY,EAAE,OAAO,EAAE,WAAW,EAAoB;IAC5E,4CAA4C;IAC5C,MAAM,gBAAgB;WAAI;KAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;IACnE,MAAM,SAAS,aAAa,CAAC,EAAE;IAE/B,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;YACT,SAAS;gBAAE,OAAO;gBAAK,SAAS;YAAE;YAClC,SAAS;gBAAE,OAAO;gBAAG,SAAS;YAAE;YAChC,YAAY;gBAAE,UAAU;YAAI;YAC5B,WAAU;;8BAEV,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA0B;;;;;;sCACxC,6LAAC;4BAAE,WAAU;sCAAgB;;;;;;;;;;;;8BAI/B,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CAA2C;;;;;;0CAC1D,6LAAC;gCAAI,WAAU;0CAA2C,OAAO,IAAI;;;;;;0CACrE,6LAAC;gCAAI,WAAU;;kDACb,6LAAC;wCAAK,WAAU;kDAA+B,OAAO,KAAK;;;;;;kDAC3D,6LAAC;wCAAK,WAAU;kDAA0B;;;;;;;;;;;;;;;;;;;;;;;8BAMhD,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAA6B;;;;;;sCAC3C,6LAAC;4BAAI,WAAU;sCACZ,cAAc,GAAG,CAAC,CAAC,QAAQ,sBAC1B,6LAAC,6LAAA,CAAA,SAAM,CAAC,GAAG;oCAET,SAAS;wCAAE,GAAG,CAAC;wCAAI,SAAS;oCAAE;oCAC9B,SAAS;wCAAE,GAAG;wCAAG,SAAS;oCAAE;oCAC5B,YAAY;wCAAE,OAAO,QAAQ;oCAAI;oCACjC,WAAU;;sDAEV,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAK,WAAW,CAAC;oBAChB,EAAE,UAAU,IAAI,kCACd,UAAU,IAAI,8BACd,UAAU,IAAI,kCACd,4BAA4B;8DAC7B,QAAQ;;;;;;8DAEX,6LAAC;oDAAK,WAAU;8DAAe,OAAO,IAAI;;;;;;;;;;;;sDAE5C,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAK,WAAU;8DAA+B,OAAO,KAAK;;;;;;8DAC3D,6LAAC;oDAAK,WAAU;8DAAwB;;;;;;;;;;;;;mCAlBrC,OAAO,EAAE;;;;;;;;;;;;;;;;8BA0BtB,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,6LAAA,CAAA,SAAM,CAAC,MAAM;wBACZ,YAAY;4BAAE,OAAO;wBAAK;wBAC1B,UAAU;4BAAE,OAAO;wBAAK;wBACxB,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;;;;;;;;;;;AAOX;KA3EwB","debugId":null}},
    {"offset": {"line": 734, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rober/studiyo%202/src/components/Games.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"@/lib/firebase\";\nimport { collection, addDoc, doc, updateDoc, onSnapshot, query, orderBy, limit, where, getDocs } from \"firebase/firestore\";\nimport QuizGame from \"./game/QuizGame\";\nimport GameResults from \"./game/GameResults\";\n\ninterface Player {\n  id: string;\n  name: string;\n  score: number;\n  answered: boolean;\n}\n\ninterface LeaderboardEntry {\n  id: string;\n  name: string;\n  score: number;\n}\n\ninterface GameSession {\n  id: string;\n  status: \"waiting\" | \"active\" | \"finished\";\n  players: Player[];\n  currentQuestionIndex: number;\n  questions: typeof sampleQuestions;\n}\n\n// Sample questions - in production these would come from Firestore\nconst sampleQuestions = [\n  {\n    id: \"q1\",\n    text: \"What is the capital of France?\",\n    answers: [\n      { id: \"a1\", text: \"London\", isCorrect: false },\n      { id: \"a2\", text: \"Paris\", isCorrect: true },\n      { id: \"a3\", text: \"Berlin\", isCorrect: false },\n      { id: \"a4\", text: \"Madrid\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q2\",\n    text: \"Which planet is known as the Red Planet?\",\n    answers: [\n      { id: \"a1\", text: \"Venus\", isCorrect: false },\n      { id: \"a2\", text: \"Jupiter\", isCorrect: false },\n      { id: \"a3\", text: \"Mars\", isCorrect: true },\n      { id: \"a4\", text: \"Saturn\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q3\",\n    text: \"What is the largest ocean on Earth?\",\n    answers: [\n      { id: \"a1\", text: \"Atlantic Ocean\", isCorrect: false },\n      { id: \"a2\", text: \"Indian Ocean\", isCorrect: false },\n      { id: \"a3\", text: \"Arctic Ocean\", isCorrect: false },\n      { id: \"a4\", text: \"Pacific Ocean\", isCorrect: true },\n    ],\n  },\n  {\n    id: \"q4\",\n    text: \"Who painted the Mona Lisa?\",\n    answers: [\n      { id: \"a1\", text: \"Vincent van Gogh\", isCorrect: false },\n      { id: \"a2\", text: \"Leonardo da Vinci\", isCorrect: true },\n      { id: \"a3\", text: \"Pablo Picasso\", isCorrect: false },\n      { id: \"a4\", text: \"Michelangelo\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q5\",\n    text: \"What is the chemical symbol for gold?\",\n    answers: [\n      { id: \"a1\", text: \"Go\", isCorrect: false },\n      { id: \"a2\", text: \"Gd\", isCorrect: false },\n      { id: \"a3\", text: \"Au\", isCorrect: true },\n      { id: \"a4\", text: \"Ag\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q6\",\n    text: \"Which country is home to Machu Picchu?\",\n    answers: [\n      { id: \"a1\", text: \"Brazil\", isCorrect: false },\n      { id: \"a2\", text: \"Peru\", isCorrect: true },\n      { id: \"a3\", text: \"Chile\", isCorrect: false },\n      { id: \"a4\", text: \"Ecuador\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q7\",\n    text: \"What is the smallest prime number?\",\n    answers: [\n      { id: \"a1\", text: \"1\", isCorrect: false },\n      { id: \"a2\", text: \"2\", isCorrect: true },\n      { id: \"a3\", text: \"3\", isCorrect: false },\n      { id: \"a4\", text: \"0\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q8\",\n    text: \"Which gas makes up about 78% of Earth's atmosphere?\",\n    answers: [\n      { id: \"a1\", text: \"Oxygen\", isCorrect: false },\n      { id: \"a2\", text: \"Carbon Dioxide\", isCorrect: false },\n      { id: \"a3\", text: \"Nitrogen\", isCorrect: true },\n      { id: \"a4\", text: \"Hydrogen\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q9\",\n    text: \"In which year did World War II end?\",\n    answers: [\n      { id: \"a1\", text: \"1944\", isCorrect: false },\n      { id: \"a2\", text: \"1945\", isCorrect: true },\n      { id: \"a3\", text: \"1946\", isCorrect: false },\n      { id: \"a4\", text: \"1943\", isCorrect: false },\n    ],\n  },\n  {\n    id: \"q10\",\n    text: \"What is the hardest natural substance on Earth?\",\n    answers: [\n      { id: \"a1\", text: \"Gold\", isCorrect: false },\n      { id: \"a2\", text: \"Iron\", isCorrect: false },\n      { id: \"a3\", text: \"Diamond\", isCorrect: true },\n      { id: \"a4\", text: \"Quartz\", isCorrect: false },\n    ],\n  },\n];\n\nexport default function Games() {\n  const [currentGame, setCurrentGame] = useState<GameSession | null>(null);\n  const [players, setPlayers] = useState<Player[]>([]);\n  const [gameEnded, setGameEnded] = useState(false);\n  const [leaderboard, setLeaderboard] = useState<Player[]>([]);\n\n  // Subscribe to leaderboard updates\n  useEffect(() => {\n    const q = query(collection(db, \"leaderboard\"), orderBy(\"score\", \"desc\"), limit(10));\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      const leaderboardData = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      } as Player));\n      setLeaderboard(leaderboardData);\n    });\n\n    return () => unsubscribe();\n  }, []);\n\n  interface GameSession {\n    id: string;\n    status: \"waiting\" | \"active\" | \"finished\";\n    players: Player[];\n    currentQuestionIndex: number;\n    questions: typeof sampleQuestions;\n  }\n\n  const startNewGame = async () => {\n    try {\n      // Create a new game session\n      const newPlayer: Player = {\n        id: Math.random().toString(36).substr(2, 9),\n        name: \"You\",\n        score: 0,\n        answered: false\n      };\n\n      const gameData: Omit<GameSession, \"id\"> = {\n        status: \"active\",\n        players: [newPlayer],\n        currentQuestionIndex: 0,\n        questions: sampleQuestions,\n      };\n\n      const gameRef = await addDoc(collection(db, \"games\"), gameData);\n\n      setCurrentGame({\n        id: gameRef.id,\n        ...gameData\n      } as GameSession);\n      setPlayers([newPlayer]);\n      setGameEnded(false);\n    } catch (error) {\n      console.error(\"Error starting new game:\", error);\n    }\n  };\n\n  // Subscribe to game updates\n  useEffect(() => {\n    if (!currentGame) return;\n\n    const unsubscribe = onSnapshot(doc(db, \"games\", currentGame.id), (doc) => {\n      if (doc.exists()) {\n        const data = doc.data();\n        setCurrentGame({\n          id: currentGame.id,\n          status: data.status,\n          players: data.players,\n          currentQuestionIndex: data.currentQuestionIndex,\n          questions: data.questions\n        } as GameSession);\n      }\n    });\n\n    return () => unsubscribe();\n  }, [currentGame?.id]);\n\n  const joinGame = async (gameId: string, playerName: string) => {\n    try {\n      const player: Player = {\n        id: Math.random().toString(36).substr(2, 9), // Simple ID generation\n        name: playerName,\n        score: 0,\n        answered: false\n      };\n\n      const gameRef = doc(db, \"games\", gameId);\n      await updateDoc(gameRef, {\n        players: [...(currentGame?.players || []), player],\n      });\n\n      setPlayers([player]);\n    } catch (error) {\n      console.error(\"Error joining game:\", error);\n    }\n  };\n\n\n  const updateLeaderboard = async (player: LeaderboardEntry) => {\n    try {\n      const leaderboardRef = collection(db, \"leaderboard\");\n      await addDoc(leaderboardRef, {\n        name: player.name,\n        score: player.score,\n        timestamp: new Date()\n      });\n    } catch (error) {\n      console.error(\"Error updating leaderboard:\", error);\n    }\n  };\n\n  const handleGameEnd = async () => {\n    if (!currentGame) return;\n\n    try {\n      // Update game status\n      const gameRef = doc(db, \"games\", currentGame.id);\n      await updateDoc(gameRef, { status: \"finished\" });\n\n      // The final scores are already in the players array\n      // Just update the UI to show the game over screen\n      setGameEnded(true);\n    } catch (error) {\n      console.error(\"Error ending game:\", error);\n    }\n  };\n\n  return (\n    <div className=\"max-w-7xl mx-auto\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-2xl font-bold mb-2\">Educational Games</h1>\n        <p className=\"text-gray-600\">Challenge your knowledge and compete with friends!</p>\n      </div>\n\n      {!currentGame && !gameEnded && (\n        <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n          {/* Game Start Card */}\n          <div className=\"lg:col-span-2\">\n            <div className=\"bg-white rounded-lg shadow-sm p-6 mb-8\">\n              <h2 className=\"text-lg font-semibold mb-4\">Quick Play</h2>\n              <p className=\"text-gray-600 mb-6\">Test your knowledge with 10 challenging questions. Answer quickly for higher points!</p>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-6\">\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Time per Question</div>\n                  <div className=\"text-2xl font-bold\">20s</div>\n                </div>\n                <div className=\"bg-gray-50 p-4 rounded-lg\">\n                  <div className=\"text-sm text-gray-600\">Max Points per Question</div>\n                  <div className=\"text-2xl font-bold\">1000</div>\n                </div>\n              </div>\n              <button\n                onClick={startNewGame}\n                className=\"w-full bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition-colors duration-200\"\n              >\n                Start New Game\n              </button>\n            </div>\n          </div>\n\n          {/* Leaderboard Card */}\n          <div>\n            <div className=\"bg-white rounded-lg shadow-sm p-6\">\n              <h2 className=\"text-lg font-semibold mb-4\">Leaderboard</h2>\n              <div className=\"space-y-3\">\n                {leaderboard.map((player, index) => (\n                  <div\n                    key={player.id}\n                    className=\"flex items-center justify-between p-3 bg-gray-50 rounded-lg\"\n                  >\n                    <div className=\"flex items-center gap-3\">\n                      <span className={`w-6 h-6 flex items-center justify-center rounded-full text-sm font-medium\n                        ${index === 0 ? 'bg-yellow-100 text-yellow-700' :\n                          index === 1 ? 'bg-gray-100 text-gray-700' :\n                          index === 2 ? 'bg-orange-100 text-orange-700' :\n                          'bg-blue-50 text-blue-700'}`}>\n                        {index + 1}\n                      </span>\n                      <span className=\"font-medium\">{player.name}</span>\n                    </div>\n                    <div className=\"font-semibold text-blue-600\">{player.score} pts</div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n\n      {currentGame && !gameEnded && (\n        <QuizGame\n          gameId={currentGame.id}\n          playerId={players[0]?.id || \"\"}\n          playerName={players[0]?.name || \"\"}\n          onGameEnd={handleGameEnd}\n          onScoreUpdate={(player) => updateLeaderboard({\n            id: player.id,\n            name: player.name,\n            score: player.score\n          })}\n        />\n      )}\n\n      {gameEnded && currentGame && (\n        <GameResults\n          players={currentGame.players}\n          onPlayAgain={() => {\n            setCurrentGame(null);\n            setGameEnded(false);\n            setPlayers([]); // Reset players for new game\n          }}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAAA;AACA;AACA;;;AANA;;;;;;AA6BA,mEAAmE;AACnE,MAAM,kBAAkB;IACtB;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAU,WAAW;YAAM;YAC7C;gBAAE,IAAI;gBAAM,MAAM;gBAAS,WAAW;YAAK;YAC3C;gBAAE,IAAI;gBAAM,MAAM;gBAAU,WAAW;YAAM;YAC7C;gBAAE,IAAI;gBAAM,MAAM;gBAAU,WAAW;YAAM;SAC9C;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAS,WAAW;YAAM;YAC5C;gBAAE,IAAI;gBAAM,MAAM;gBAAW,WAAW;YAAM;YAC9C;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAK;YAC1C;gBAAE,IAAI;gBAAM,MAAM;gBAAU,WAAW;YAAM;SAC9C;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAkB,WAAW;YAAM;YACrD;gBAAE,IAAI;gBAAM,MAAM;gBAAgB,WAAW;YAAM;YACnD;gBAAE,IAAI;gBAAM,MAAM;gBAAgB,WAAW;YAAM;YACnD;gBAAE,IAAI;gBAAM,MAAM;gBAAiB,WAAW;YAAK;SACpD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAoB,WAAW;YAAM;YACvD;gBAAE,IAAI;gBAAM,MAAM;gBAAqB,WAAW;YAAK;YACvD;gBAAE,IAAI;gBAAM,MAAM;gBAAiB,WAAW;YAAM;YACpD;gBAAE,IAAI;gBAAM,MAAM;gBAAgB,WAAW;YAAM;SACpD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAM,WAAW;YAAM;YACzC;gBAAE,IAAI;gBAAM,MAAM;gBAAM,WAAW;YAAM;YACzC;gBAAE,IAAI;gBAAM,MAAM;gBAAM,WAAW;YAAK;YACxC;gBAAE,IAAI;gBAAM,MAAM;gBAAM,WAAW;YAAM;SAC1C;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAU,WAAW;YAAM;YAC7C;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAK;YAC1C;gBAAE,IAAI;gBAAM,MAAM;gBAAS,WAAW;YAAM;YAC5C;gBAAE,IAAI;gBAAM,MAAM;gBAAW,WAAW;YAAM;SAC/C;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAK,WAAW;YAAM;YACxC;gBAAE,IAAI;gBAAM,MAAM;gBAAK,WAAW;YAAK;YACvC;gBAAE,IAAI;gBAAM,MAAM;gBAAK,WAAW;YAAM;YACxC;gBAAE,IAAI;gBAAM,MAAM;gBAAK,WAAW;YAAM;SACzC;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAU,WAAW;YAAM;YAC7C;gBAAE,IAAI;gBAAM,MAAM;gBAAkB,WAAW;YAAM;YACrD;gBAAE,IAAI;gBAAM,MAAM;gBAAY,WAAW;YAAK;YAC9C;gBAAE,IAAI;gBAAM,MAAM;gBAAY,WAAW;YAAM;SAChD;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAM;YAC3C;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAK;YAC1C;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAM;YAC3C;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAM;SAC5C;IACH;IACA;QACE,IAAI;QACJ,MAAM;QACN,SAAS;YACP;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAM;YAC3C;gBAAE,IAAI;gBAAM,MAAM;gBAAQ,WAAW;YAAM;YAC3C;gBAAE,IAAI;gBAAM,MAAM;gBAAW,WAAW;YAAK;YAC7C;gBAAE,IAAI;gBAAM,MAAM;gBAAU,WAAW;YAAM;SAC9C;IACH;CACD;AAEc,SAAS;;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAsB;IACnE,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnD,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAE3D,mCAAmC;IACnC,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACR,MAAM,IAAI,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,gBAAgB,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE,SAAS,SAAS,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE;YAC/E,MAAM,cAAc,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE;+CAAG,CAAC;oBACjC,MAAM,kBAAkB,SAAS,IAAI,CAAC,GAAG;uEAAC,CAAA,MAAO,CAAC;gCAChD,IAAI,IAAI,EAAE;gCACV,GAAG,IAAI,IAAI,EAAE;4BACf,CAAW;;oBACX,eAAe;gBACjB;;YAEA;mCAAO,IAAM;;QACf;0BAAG,EAAE;IAUL,MAAM,eAAe;QACnB,IAAI;YACF,4BAA4B;YAC5B,MAAM,YAAoB;gBACxB,IAAI,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;gBACzC,MAAM;gBACN,OAAO;gBACP,UAAU;YACZ;YAEA,MAAM,WAAoC;gBACxC,QAAQ;gBACR,SAAS;oBAAC;iBAAU;gBACpB,sBAAsB;gBACtB,WAAW;YACb;YAEA,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,UAAU;YAEtD,eAAe;gBACb,IAAI,QAAQ,EAAE;gBACd,GAAG,QAAQ;YACb;YACA,WAAW;gBAAC;aAAU;YACtB,aAAa;QACf,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;IACF;IAEA,4BAA4B;IAC5B,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;2BAAE;YACR,IAAI,CAAC,aAAa;YAElB,MAAM,cAAc,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,SAAS,YAAY,EAAE;+CAAG,CAAC;oBAChE,IAAI,IAAI,MAAM,IAAI;wBAChB,MAAM,OAAO,IAAI,IAAI;wBACrB,eAAe;4BACb,IAAI,YAAY,EAAE;4BAClB,QAAQ,KAAK,MAAM;4BACnB,SAAS,KAAK,OAAO;4BACrB,sBAAsB,KAAK,oBAAoB;4BAC/C,WAAW,KAAK,SAAS;wBAC3B;oBACF;gBACF;;YAEA;mCAAO,IAAM;;QACf;0BAAG;QAAC,aAAa;KAAG;IAEpB,MAAM,WAAW,OAAO,QAAgB;QACtC,IAAI;YACF,MAAM,SAAiB;gBACrB,IAAI,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,GAAG;gBACzC,MAAM;gBACN,OAAO;gBACP,UAAU;YACZ;YAEA,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,SAAS;YACjC,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBACvB,SAAS;uBAAK,aAAa,WAAW,EAAE;oBAAG;iBAAO;YACpD;YAEA,WAAW;gBAAC;aAAO;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,uBAAuB;QACvC;IACF;IAGA,MAAM,oBAAoB,OAAO;QAC/B,IAAI;YACF,MAAM,iBAAiB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE;YACtC,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB;gBAC3B,MAAM,OAAO,IAAI;gBACjB,OAAO,OAAO,KAAK;gBACnB,WAAW,IAAI;YACjB;QACF,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,+BAA+B;QAC/C;IACF;IAEA,MAAM,gBAAgB;QACpB,IAAI,CAAC,aAAa;QAElB,IAAI;YACF,qBAAqB;YACrB,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,yHAAA,CAAA,KAAE,EAAE,SAAS,YAAY,EAAE;YAC/C,MAAM,CAAA,GAAA,sKAAA,CAAA,YAAS,AAAD,EAAE,SAAS;gBAAE,QAAQ;YAAW;YAE9C,oDAAoD;YACpD,kDAAkD;YAClD,aAAa;QACf,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,sBAAsB;QACtC;IACF;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,6LAAC;wBAAE,WAAU;kCAAgB;;;;;;;;;;;;YAG9B,CAAC,eAAe,CAAC,2BAChB,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;kCACb,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAE,WAAU;8CAAqB;;;;;;8CAClC,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAwB;;;;;;8DACvC,6LAAC;oDAAI,WAAU;8DAAqB;;;;;;;;;;;;sDAEtC,6LAAC;4CAAI,WAAU;;8DACb,6LAAC;oDAAI,WAAU;8DAAwB;;;;;;8DACvC,6LAAC;oDAAI,WAAU;8DAAqB;;;;;;;;;;;;;;;;;;8CAGxC,6LAAC;oCACC,SAAS;oCACT,WAAU;8CACX;;;;;;;;;;;;;;;;;kCAOL,6LAAC;kCACC,cAAA,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAG,WAAU;8CAA6B;;;;;;8CAC3C,6LAAC;oCAAI,WAAU;8CACZ,YAAY,GAAG,CAAC,CAAC,QAAQ,sBACxB,6LAAC;4CAEC,WAAU;;8DAEV,6LAAC;oDAAI,WAAU;;sEACb,6LAAC;4DAAK,WAAW,CAAC;wBAChB,EAAE,UAAU,IAAI,kCACd,UAAU,IAAI,8BACd,UAAU,IAAI,kCACd,4BAA4B;sEAC7B,QAAQ;;;;;;sEAEX,6LAAC;4DAAK,WAAU;sEAAe,OAAO,IAAI;;;;;;;;;;;;8DAE5C,6LAAC;oDAAI,WAAU;;wDAA+B,OAAO,KAAK;wDAAC;;;;;;;;2CAbtD,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;YAsB3B,eAAe,CAAC,2BACf,6LAAC,yIAAA,CAAA,UAAQ;gBACP,QAAQ,YAAY,EAAE;gBACtB,UAAU,OAAO,CAAC,EAAE,EAAE,MAAM;gBAC5B,YAAY,OAAO,CAAC,EAAE,EAAE,QAAQ;gBAChC,WAAW;gBACX,eAAe,CAAC,SAAW,kBAAkB;wBAC3C,IAAI,OAAO,EAAE;wBACb,MAAM,OAAO,IAAI;wBACjB,OAAO,OAAO,KAAK;oBACrB;;;;;;YAIH,aAAa,6BACZ,6LAAC,4IAAA,CAAA,UAAW;gBACV,SAAS,YAAY,OAAO;gBAC5B,aAAa;oBACX,eAAe;oBACf,aAAa;oBACb,WAAW,EAAE,GAAG,6BAA6B;gBAC/C;;;;;;;;;;;;AAKV;GAxNwB;KAAA","debugId":null}},
    {"offset": {"line": 1405, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/rober/studiyo%202/src/app/games/page.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport Games from \"@/components/Games\";\r\n\r\nexport default function GamesPage() {\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto py-8 px-4\">\r\n      <Games />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIe,SAAS;IACtB,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC,8HAAA,CAAA,UAAK;;;;;;;;;;AAGZ;KANwB","debugId":null}}]
}